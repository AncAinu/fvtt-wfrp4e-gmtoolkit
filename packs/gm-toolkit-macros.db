{"_id":"2sefSFqqAbySw2nz","name":"Reduce Advantage","permission":{"default":0,"k5y1jEYMBqd9uLUx":3},"type":"script","flags":{},"scope":"global","command":"/* Reduces Advantage for the selected token by 1 (to minimum 0).\n*/\n\nupdateAdvantage(token,`reduce`);","author":"k5y1jEYMBqd9uLUx","img":"modules/wfrp4e-gm-toolkit/assets/icons/advantage-reduce.svg","actorIds":[]}
{"_id":"6EKiEQZTbmQN97Vr","name":"Clear Advantage","permission":{"default":0,"k5y1jEYMBqd9uLUx":3},"type":"script","flags":{},"scope":"global","command":"/* Resets Advantage for the selected token to 0 */\n\nupdateAdvantage(token,`clear`);","author":"k5y1jEYMBqd9uLUx","img":"modules/wfrp4e-gm-toolkit/assets/icons/advantage-clear.svg","actorIds":[]}
{"_id":"6UwKY8nGZyXzAXCa","name":"Toggle Scene Visibility and Light","permission":{"default":0,"h21fB4dFvdDBRcFD":3},"type":"script","flags":{"furnace":{"runAsGM":false}},"scope":"global","command":"/* Toggles the Token Vision and Global Illumination settings. \n * If Token Vision is set, Global Illumination is unset (and vice-versa).\n * Applies to the scene being viewed, which is not necessarily the active scene.\n */\n\n\nlet thisScene = game.scenes.viewed;\nlet uiNotice = game.i18n.format(\"GMTOOLKIT.Message.UnexpectedNoChange\", {});\n\nif (thisScene.data.tokenVision) {\n  thisScene.update({tokenVision: false, globalLight: true});\n  uiNotice = game.i18n.format(\"GMTOOLKIT.Scene.GlobalNotToken\", {sceneName: thisScene.name}, {});\n} else {\n  thisScene.update({tokenVision: true, globalLight: false});\n  uiNotice = game.i18n.format(\"GMTOOLKIT.Scene.TokenNotGlobal\", {sceneName: thisScene.name}, {});\n}\n\nui.notifications.notify(uiNotice);","author":"h21fB4dFvdDBRcFD","img":"modules/wfrp4e-gm-toolkit/assets/icons/toggle-scene-light.svg","actorIds":[]}
{"_id":"AjUYYy7qAN55BERN","name":"Add Advantage","permission":{"default":0,"k5y1jEYMBqd9uLUx":3},"type":"script","flags":{},"scope":"global","command":"/* Increases Advantage for the selected token by 1.\n * Caps at character's maximum advantage. \n*/\n\nupdateAdvantage(token,`increase`);","author":"k5y1jEYMBqd9uLUx","img":"modules/wfrp4e-gm-toolkit/assets/icons/advantage-add.svg","actorIds":[]}
{"_id":"DGYdRmtbMZ81NmQ3","name":"Set Token Vision and Light","type":"script","author":"Zo7HSQ75uO8dWUkH","img":"modules/wfrp4e-gm-toolkit/assets/icons/set-token-vision-light.svg","scope":"global","command":"/* Open a dialog for quickly changing vision and lighting parameters of the selected token(s).\n * This macro is adapted for WFRP4e from Token Vision Configuration by @Sky#9453\n * https://github.com/Sky-Captain-13/foundry/tree/master/scriptMacros\n */\n\nsetTokenVisionLight();\n\nasync function setTokenVisionLight() { \n  if (canvas.tokens.controlled.length < 1) \n    return ui.notifications.error( game.i18n.localize(\"GMTOOLKIT.Token.Select\"),{} );\n\n  let applyChanges = false;\n\n  new Dialog({\n    title: game.i18n.localize(\"GMTOOLKIT.Dialog.SetVisionLight.Title\"),\n    content: `\n      <form> \n        <div class=\"form-group\">\n          <label>\n          ${game.i18n.localize(\"GMTOOLKIT.Dialog.SetVisionLight.VisionType\")}\n        </label>\n          <select id=\"vision-type\" name=\"vision-type\"> \n            <option value=\"normalVision\">\n            ${game.i18n.localize(\"GMTOOLKIT.Vision.Normal\")} \n            </option> \n            <option value=\"blindedVision\"> \n            ${game.i18n.localize(\"GMTOOLKIT.Vision.Blinded\")} \n            </option>\n            <option value=\"nightVision\"> \n            ${game.i18n.localize(\"GMTOOLKIT.Vision.Night\")} \n            </option>\n            <option value=\"darkVision\">\n            ${game.i18n.localize(\"GMTOOLKIT.Vision.Dark\")} \n            </option>\n            <option value=\"noVision\">\n            ${game.i18n.localize(\"GMTOOLKIT.Vision.None\")} \n            </option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label>\n          ${game.i18n.localize(\"GMTOOLKIT.Dialog.SetVisionLight.LightSource\")} \n          </label>\n          <select id=\"light-source\" name=\"light-source\">\n            <option value=\"none\"> \n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.NoLight\")}\n            </option>\n            <option value=\"matches\">\n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.Matches\")} \n            </option>\n            <option value=\"candle\">\n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.Candle\")} \n            </option>\n            <option value=\"davrich-lamp\">\n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.DavrichLamp\")} \n            </option>\n            <option value=\"torch\">\n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.Torch\")}\n            </option>\n            <option value=\"lantern\">\n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.Lantern\")}\n            </option>\n            <option value=\"storm-broad\">\n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.StormLantern.Dim\")} \n            </option>\n            <option value=\"storm-narrow\">\n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.StormLantern.Bright\")} \n            </option>\n            <option value=\"storm-shut\"> \n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.StormLantern.Shut\")}\n            </option>\n            <option value=\"ablaze\"> \n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.Ablaze\")} \n            </option>\n            <option value=\"light\">\n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.Light\")}\n            </option>\n            <option value=\"witchlight\">\n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.Witchlight\")}\n            </option>\n            <option value=\"glowing-skin\">\n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.GlowingSkin\")}\n            </option>\n            <option value=\"soulfire\">\n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.Soulfire\")} \n            </option>\n            <option value=\"pha\">\n            ${game.i18n.localize(\"GMTOOLKIT.LightSource.Pha\")} \n            </option>\n          </select>\n        </div>\n      </form>\n      `,\n    buttons: {\n      yes: {\n        icon: \"<i class='fas fa-check'></i>\",\n        label: game.i18n.localize(\"GMTOOLKIT.Dialog.Apply\"),\n        callback: () => applyChanges = true\n      },\n      no: {\n        icon: \"<i class='fas fa-times'></i>\",\n        label: game.i18n.localize(\"GMTOOLKIT.Dialog.Cancel\"),\n      },\n    },\n    default: \"yes\",\n    close: html => {\n      if (applyChanges) {\n        for ( let token of canvas.tokens.controlled ) {\n          let visionType = html.find('[name=\"vision-type\"]')[0].value || \"nochange\"; // TODO: default vision option based on condition -> trait -> talent. Issue Log: https://github.com/Jagusti/fvtt-wfrp4e-gmtoolkit/issues/42\n          let item; // used for finding whether token has Night Vision or Dark Vision \n          let lightSource = html.find('[name=\"light-source\"]')[0].value || \"nochange\";\n          let advNightVision = 0;\n          let dimSight = 0;\n          let brightSight = 0;\n          let dimLight = 0;\n          let brightLight = 0; // \n          let lightAngle = 360;\n          let lockRotation = token.data.lockRotation;\n          let lightColor = \"\"; \n          let lightColorIntensity = 0;\n          let animationIntensity = 1;\n          let animationSpeed = 1;\n          let animationType = \"none\";\n      \n          // Get Light Source Values\n          switch (lightSource) {\n            case \"none\":\n            case \"storm-shut\":\n              dimLight = 0;\n              break;\n            case \"matches\":\n              dimLight = 5;\n              brightLight = 2;\n              lightColor = \"#ffaa00\";\n              lightColorIntensity = 0.3;\n              animationIntensity = 8;\n              animationSpeed = 8;\n              animationType = \"torch\";\n              break;\n            case \"candle\":\n              dimLight = 10;\n              brightLight = 5;\n              lightColor = \"#ffaa00\";\n              lightColorIntensity = 0.3;\n              animationIntensity = 8;\n              animationSpeed = 8;\n              animationType = \"torch\";\n              break;\n            case \"davrich-lamp\":\n              dimLight = 10;\n              brightLight = 5;\n              lightColor = \"#ffaa00\";\n              lightColorIntensity = 0.4;\n              animationIntensity = 4;\n              animationSpeed = 4;\n              animationType = \"torch\";\n              break;\n            case \"torch\":\n              dimLight = 15;\n              brightLight = 7.5;\n              lightColor = \"#ffaa00\";\n              lightColorIntensity = 0.5;\n              animationIntensity = 7;\n              animationSpeed = 7;\n              animationType = \"torch\"\n              break;\n            case \"lantern\":\n              dimLight = 20;\n              brightLight = 10;\n              lightColor = \"#ffcc66\";\n              lightColorIntensity = 0.7;\n              animationIntensity = 3;\n              animationSpeed = 3;\n              animationType = \"torch\";\n              break;\n            case \"storm-broad\":\n              dimLight = 20;\n              brightLight = 10;\n              lightColor = \"#ffcc66\";\n              lightColorIntensity = 0.5;\n              animationIntensity = 1;\n              animationSpeed = 2;\n              animationType = \"torch\";\n              break;\n            case \"storm-narrow\":\n              dimLight = 30;\n              brightLight = 20;\n              lightColor = \"#ffcc66\";\n              lightColorIntensity = 0.7;\n              animationIntensity = 1;\n              animationSpeed = 1;\n              animationType = \"torch\";\n              lockRotation = false;\n              lightAngle = 60;\n              break;\n            case \"light\":\n              dimLight = 15;\n              brightLight = 7.5;\n              lightColor = \"#99ffff\";\n              lightColorIntensity = 0.5;\n              animationIntensity = 3;\n              animationSpeed = 2;\n              animationType = \"pulse\"\n              break;\n            case \"witchlight\":\n              dimLight = 20;\n              brightLight = 10;\n              lightColor = \"#99ffff\";\n              lightColorIntensity = 0.7;\n              animationIntensity = 6;\n              animationSpeed = 2;\n              animationType = \"chroma\"\n              break;\n            case \"glowing-skin\":\n              dimLight = 10;\n              brightLight = 3;\n              lightColor = \"#ffbd80\";\n              lightColorIntensity = 0.3;\n              animationIntensity = 2;\n              animationSpeed = 2;\n              animationType = \"pulse\";\n              break;\n            case \"ablaze\":\n              dimLight = 15;\n              brightLight = 7.5;\n              lightColor = \"#ff7733\";\n              lightColorIntensity = 0.5;\n              animationIntensity = 7;\n              animationSpeed = 7;\n              animationType = \"torch\"\n              break;\n            case \"pha\":\n              dimLight = token.actor.data.data.characteristics.wp.bonus;\n              brightLight = token.actor.data.data.characteristics.wp.bonus;\n              lightColor = \"#ffddbb\";\n              lightColorIntensity = 0.6;\n              animationIntensity = 4;\n              animationSpeed = 4;\n              animationType = \"sunburst\"\n              break;\n            case \"soulfire\":\n              dimLight = 15;\n              brightLight = 7.5;\n              lightColor = \"#ff7733\";\n              lightColorIntensity = 0.5;\n              animationIntensity = 7;\n              animationSpeed = 7;\n              animationType = \"fog\"\n              break;\n            case \"nochange\":\n              default:\n                dimLight = token.data.dimLight;\n                brightLight = token.data.brightLight;\n                lightAngle = token.data.lightAngle;\n                lockRotation = token.data.lockRotation;\n                lightColor = token.data.lightColor;\n          }\n                           \n          // Get Vision Type Values\n      switch (visionType) {\n        case \"blindedVision\":\n          brightSight = 1;\n          dimSight = 0;\n          break;\n        case \"noVision\":\n          dimSight = 0;\n          brightSight = 0;\n          dimLight = 0;\n          brightLight = 0;\n          break;\n        case \"darkVision\": \n          item = token.actor.items.find(i => i.data.name.toLowerCase() == game.i18n.localize(\"GMTOOLKIT.Trait.DarkVision\").toLowerCase() );\n            if(item == undefined) { \n            (game.settings.get(\"wfrp4e-gm-toolkit\", \"overrideDarkVision\")) ? dimSight = Number(game.settings.get(\"wfrp4e-gm-toolkit\", \"rangeDarkVision\"))  : dimSight = Number(game.settings.get(\"wfrp4e-gm-toolkit\", \"rangeNormalSight\")) ;\n          } else {\n            dimSight = Number(game.settings.get(\"wfrp4e-gm-toolkit\", \"rangeDarkVision\"));\n          }\n          brightSight = (dimSight / 2);\n          break;\n        case \"nightVision\":\n          // Night Vision requires some minimal illumination to provide a benefit\n          if (game.scenes.viewed.data.darkness < 1 | dimLight > 0 | game.scenes.viewed.globalLight) {\n            item = token.actor.items.find(i => i.data.name.toLowerCase() == game.i18n.localize(\"GMTOOLKIT.Talent.NightVision\").toLowerCase() );\n              if(item == undefined) { \n                (game.settings.get(\"wfrp4e-gm-toolkit\", \"overrideNightVision\")) ? advNightVision = 1  : advNightVision = 0 ;\n              } else { \n                for (let item of token.actor.items)\n                  {\n                    if (item.name.toLowerCase() == game.i18n.localize(\"GMTOOLKIT.Talent.NightVision\").toLowerCase() ) {\n                      switch (item.type) {\n                        case \"trait\" :\n                          advNightVision = 1;\n                          break;\n                        case \"talent\" :\n                          advNightVision += item.data.data.advances.value;\n                          break;\n                      }\n                    }\n                  }\n              }\n            brightSight = (20 * advNightVision); \n            dimSight = Math.max(brightSight + dimLight, Number(game.settings.get(\"wfrp4e-gm-toolkit\", \"rangeNormalSight\")));\n          }\n          break;\n        case \"normalVision\":\n          dimSight = Number(game.settings.get(\"wfrp4e-gm-toolkit\", \"rangeNormalSight\"));\n          brightSight = 0;\n          break;\n        case \"nochange\":\n          default:\n          dimSight = token.data.dimSight;\n          brightSight = token.data.brightSight;\n      }\n      \n          // Update Token\n          token.document.update({\n            vision: true,\n            visionType: visionType,\n            lightSource: lightSource,\n            dimLight: dimLight, \n            brightLight:  brightLight,\n            lightAngle: lightAngle,\n            lightColor: lightColor,\n            lightAlpha: lightColorIntensity,\n            lightAnimation: {\n              intensity: animationIntensity,\n              speed: animationSpeed,\n              type: animationType\n            },\n            dimSight: dimSight,\n            brightSight: brightSight,\n            lockRotation: lockRotation,\n            advNightVision: advNightVision\n          });\n        }\n      }\n    }\n  }).render(true);\n};","folder":null,"sort":0,"permission":{"default":0,"Zo7HSQ75uO8dWUkH":3},"flags":{"core":{"sourceId":"Macro.issAGdpFxchQw2zp"}}}
{"_id":"g9Wohpie7ODdbRKX","name":"End of Session Routine","permission":{"default":0,"BsnP0LhXXtS4iz4M":3},"type":"script","flags":{},"scope":"global","command":"/* Unified macro to run for end of session admin.\n * Automatically fires up other macros.\n * Affects actors according to the criteria of individual macros.\n * Add XP and Reset Fortune both require player characters to be targeted.\n */ \n\nendSession();\n\nasync function endSession () {\n    if (!game.user.isGM) {\n        ui.notifications.error(game.i18n.localize('GMTOOLKIT.Message.SessionEnd.NoPermission'), {});\n    }\n\n    await game.togglePause(true);\n\n    await game.macros.getName(\"Add XP\").execute();\n    await game.macros.getName(\"Reset Fortune\").execute();\n\n    if (game.settings.get(\"wfrp4e-gm-toolkit\", \"exportChat\")) {\n        await game.messages.export();\n    };\n\n    console.log(\"GM Toolkit (WFRP4e) | End of Session Routine completed\")\n};","author":"BsnP0LhXXtS4iz4M","img":"modules/wfrp4e-gm-toolkit/assets/icons/end-session.svg","actorIds":[]}
{"_id":"ihMGjHFP3SdvYH2k","name":"Simply d100","permission":{"default":0,"k5y1jEYMBqd9uLUx":3},"type":"chat","flags":{},"scope":"global","command":"/r 1d100","author":"k5y1jEYMBqd9uLUx","img":"modules/wfrp4e-gm-toolkit/assets/icons/d100.svg","actorIds":[]}
{"_id":"pZmPtsEZHOpyJfnq","name":"Reset Fortune","type":"script","author":"k5y1jEYMBqd9uLUx","img":"modules/wfrp4e-gm-toolkit/assets/icons/reset-fortune.svg","scope":"global","command":"/* Restores Fortune the Fate level of targetted character(s).\n * Applies any Luck talent bonus.\n */\n\nresetFortune();\n\nasync function resetFortune() {\n\tif (game.user.targets.size < 1) \n\treturn ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Token.TargetPCs\"),{});\n\n\tlet targetName = String(); \n\tlet startingFortune = Number();\n\tlet newFortune = Number();\n\tlet chatContent;\n\n\tgame.user.targets.forEach(target => {\n\t\ttargetName = target.data.name; \n\t\t\n\t\tif (target.actor.data.type == \"character\")\n\t\t\t{\n\t\t\t\tstartingFortune = target.actor.data.data.status.fortune.value;\n\t\t\t\tlet advLuck = 0;\n\t\t\t\tlet item = target.actor.items.find(i => i.data.name === game.i18n.localize(\"GMTOOLKIT.Talent.Luck\") )\n\t\t\t\tif(item == undefined || item.data.data.advances.value < 1) {\n\t\t\t\t\tadvLuck = 0;\n\t\t\t\t\t} else { \n\t\t\t\t\t\tfor (let item of target.actor.items)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (item.type == \"talent\" && item.name == game.i18n.localize(\"GMTOOLKIT.Talent.Luck\"))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tadvLuck += item.data.data.advances.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tnewFortune = target.actor.data.data.status.fate.value +advLuck\n\t\t\t\ttarget.actor.update({\n\t\t\t\t\t\"data.status.fortune.value\": newFortune\n\t\t\t\t})\n\t\n\t\t\t\tchatContent = game.i18n.format(\"GMTOOLKIT.ResetFortune.Success\",{targetName, startingFortune, newFortune} );\n\t\t\t} else {\n\t\t\t\tchatContent = game.i18n.format(\"GMTOOLKIT.ResetFortune.NotPC\", {targetName} )\n\t\t\t}\n\t\tlet chatData = {\n\t\t\tuser: game.user.id,\n\t\t\tcontent: chatContent\n\t\t};\n\n\t\tChatMessage.create(chatData, {});  \n\t\tconsole.log(chatContent);\n\t})\n};","folder":null,"sort":0,"permission":{"default":0,"k5y1jEYMBqd9uLUx":3},"flags":{}}
{"_id":"roGO31Lo4pyL5kvg","name":"Send Dark Whispers","type":"script","author":"Zo7HSQ75uO8dWUkH","img":"modules/wfrp4e-gm-toolkit/assets/icons/dark-whispers.svg","scope":"global","command":"/* Open a dialog to send a Dark Whisper (WFRP p183) to selected player character(s).\n * Adapted from original macro developed by Vindico#9103. \n */\n\nformDarkWhispers(); //  Set default user target filter in module settings. Override by adding parameter to 'all', 'absent' or 'present' party members. Clear parameter to revert to default. \n\nfunction formDarkWhispers(targets=String(game.settings.get(\"wfrp4e-gm-toolkit\", \"targetDarkWhispers\"))) {\n\n  // Non-GMs are not permitted to send Dark Whispers\n  if (!game.user.isGM) {      \n    return ui.notifications.error(game.i18n.localize('GMTOOLKIT.Message.DarkWhispers.NoPermission'));\n  }\n\n  //TODO: Switch to actor based selection\n  // Only users who have an assigned player character are available to whisper to. \n  let users = []\n  switch (targets) { \n    case 'all':\n      users = game.users.filter(user => (user.character?.type == 'character'));\n      break;\n  case 'absent':\n      users = game.users.filter(user => !user.active && (user.character?.type == 'character'));\n      break;\n  case 'present':\n  default:\n     users = game.users.filter(user => user.active && (user.character?.type == 'character'));\n     break;\n  }\n\n  if (!users) {   \n    return ui.notifications.error(game.i18n.localize('GMTOOLKIT.Message.DarkWhispers.NoEligibleCharacters'));\n  }\n  \n  // Build list of player / characters to select via dialog\n  //TODO: Map individual Corruption values, rather than increment\n  let corruptionAvailable = 0; // count to check there are characters with corruption to target\n  let checkOptions = \"\";\n  users.forEach(user => {\n    let actorCorruption = {\n      value: game.actors.get(user.character.id).data.data.status.corruption.value, \n      max: game.actors.get(user.character.id).data.data.status.corruption.max\n    };\n    corruptionAvailable += actorCorruption.value;\n    // Make unselectable if character has no Corruption to deal with\n    // TODO: add translation string for tooltip\n    let canWhisperTo = (actorCorruption.value ) ?  'enabled title=\"Someone to bargain with.\"' : 'disabled title=\"No Corruption to spend on offer.\"' ;\n\n    checkOptions+=`\n        <div class=\"form-group\">\n        <input type=\"checkbox\" name=\"${user.id}\" value=\"${user.name}\" ${canWhisperTo}>\n        <label for=\"${user.id}\"> <strong>${user.character.name}</strong> (${user.name})</label>\n        <label for=\"${user.id}\"> ${actorCorruption.value} / ${actorCorruption.max} ${game.i18n.localize('GMTOOLKIT.Status.Corruption')} </label>\n        </div>\n      `\n  });\n  \n  // abort if no characters have any Corruption\n  if (corruptionAvailable == 0) {   \n    return ui.notifications.error(game.i18n.localize('GMTOOLKIT.Message.DarkWhispers.NoEligibleCharacters'));\n  };\n\n // Construct and show form to write whisper message and select target player characters\n let dialogContent = `\n    <div class=\"form-group \">\n      <label for=\"targets\">${game.i18n.localize('GMTOOLKIT.Dialog.DarkWhispers.WhisperTargets')} </label>\n    </div>\n    ${checkOptions} \n    <div class=\"form-group message\">\n      <label for=\"message\">${game.i18n.localize('GMTOOLKIT.Dialog.DarkWhispers.WhisperMessage')}</label>\n    </div>\n    <div class=\"form-group\">\n      <textarea id=\"message\" name=\"message\" rows=\"4\" cols=\"50\">${game.wfrp4e.tables.rollTable('darkwhispers').description}</textarea>\n    </div>\n    `\n new Dialog({\n  title: game.i18n.localize('GMTOOLKIT.Dialog.DarkWhispers.Title'),\n  content:dialogContent,\n  buttons:{\n    whisper:{   \n      label: game.i18n.localize('GMTOOLKIT.Dialog.DarkWhispers.SendWhisper'),\n      callback: (html) => sendDarkWhispers(html, users, \"private\")\n    }\n  }\n}).render(true);\n}\n\nfunction sendDarkWhispers(html, users, sendmode) {\n  // check for whisper message \n  var messageText = html.find('[name=\"message\"]')[0].value;\n  \n  // build list of selected players ids for whispers target\n  var targets = [];\n  for ( let user of users ) {\n    if (html.find('[name=\"'+user.id+'\"]')[0].checked){\n      targets.push(user.id);\n    }\n  }\n\n  // abort if no whisper or character is selected \n  if (targets.length == 0 || messageText.length == 0) {\n    return ui.notifications.error(game.i18n.format('GMTOOLKIT.Message.DarkWhispers.WhisperAborted', {currentUser: game.users.current.name}));\n  }\n\n  // Construct and send message to whisper targets\n  // Build the translation string based on the setting\n  let messageTemplate = \"GMTOOLKIT.Settings.DarkWhispers.message\" + `.${game.settings.get(\"wfrp4e-gm-toolkit\", \"messageDarkWhispers\")}`\n  // Parse the translated message\n  let whisperMessage = `${game.i18n.format(messageTemplate, {message: messageText})}`\n  \n  // Add response buttons for chat card\n  // data- attributes are used by listener\n  let responseObjects = `\n    <span class=\"chat-card-button-area\">\n    <a class='chat-card-button darkwhisper-button' data-button='actOnWhisper' data-ask=\"${game.i18n.format(messageText)}\">${game.i18n.localize('GMTOOLKIT.Message.DarkWhispers.Accept')}</a>\n    <a class='chat-card-button darkwhisper-button' data-button='denyDarkGods' data-ask=\"${game.i18n.format(messageText)}\">${game.i18n.localize('GMTOOLKIT.Message.DarkWhispers.Reject')}</a>\n    </span>\n    `  \n\n  ChatMessage.create({\n    content: whisperMessage + responseObjects,\n    whisper: targets\n  });\n  \n}","folder":null,"sort":0,"permission":{"default":0,"Zo7HSQ75uO8dWUkH":3},"flags":{"core":{"sourceId":"Macro.NsfnGgD7GMH7AMwI"}}}
{"_id":"rzKeTLKp0bOp5SK9","name":"Add XP","permission":{"default":0,"k5y1jEYMBqd9uLUx":3},"type":"script","flags":{},"scope":"global","command":"/* Adds a set amount of XP to targeted character(s). \n* Default amount of XP can be preset in module settings, \n* along with option to prompt for XP amount each time.\n* Non-whole numbers are rounded off. Negative numbers are subtracted. \n* Adds XP update note to the Chat log.\n */\n\naddXP();\n\nasync function addXP() {\n\n  if (game.user.targets.size < 1) return ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Token.TargetPCs\"), {});\n  \n  // Set default XP\n  let XP = Number(game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefault\"))\n  \n  // Prompt for XP\n  if (game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPPrompt\")) {\n    const dialog = new Dialog({\n      title: (game.i18n.localize('GMTOOLKIT.Dialog.AddXP.Title')),\n      content: `<form>\n              <div class=\"form-group\">\n              <label>\n                  ${game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.Prompt\")}          \n                  </label> \n                  <input type=\"text\" id=\"add-xp\" name=\"add-xp\" value=\"${XP}\" />\n              </div>\n          </form>`,\n      buttons: {\n        yes: {\n          icon: \"<i class='fas fa-check'></i>\",\n          label: game.i18n.localize(\"GMTOOLKIT.Dialog.Apply\"),\n          callback: (html) => {\n            let XP = html.find('#add-xp').val();\n            updateXP(Number(XP));\n          }\n        },\n        no: {\n          icon: \"<i class='fas fa-times'></i>\",\n          label: game.i18n.localize(\"GMTOOLKIT.Dialog.Cancel\"),\n        },\n      },\n      default: \"yes\"\n  }).render(true);\n  } else {\n    updateXP(XP)\n  }\n  \n  function updateXP(XP) {\n    XP = Math.round(XP);\n    if (isNaN(XP)) return ui.notifications.error(game.i18n.localize('GMTOOLKIT.Dialog.AddXP.InvalidXP'))\n  \n    let targetName = String(); \n    let XPTotal = Number();\n    let newXPTotal = Number();\n    let XPCurrent = Number();\n    let newXPCurrent = Number();\n    let chatContent = String(game.i18n.localize(\"GMTOOLKIT.Dialog.Cancel\"));\n  \n    game.user.targets.forEach(target => {\n    targetName = target.data.name; \n  \n    if (target.actor.data.type == \"character\")\n      {\n        XPTotal = target.actor.data.data.details.experience.total; \n        newXPTotal = Math.max(XPTotal + XP,0);\n        XPCurrent = target.actor.data.data.details.experience.current; \n        newXPCurrent = XPCurrent + XP,0;\n  \n        target.actor.update({\n          \"data.details.experience.total\": newXPTotal\n        })\n            \n        chatContent = game.i18n.format('GMTOOLKIT.AddXP.Success', {XP, targetName, XPTotal, newXPTotal, XPCurrent, newXPCurrent} )\n      } else {\n        chatContent = game.i18n.format('GMTOOLKIT.AddXP.NotPC', {targetName} )\n      }\n  \n      let chatData = {\n        user: game.user.id,\n        content: chatContent\n      };\n  \n    ChatMessage.create(chatData, {});  \n    console.log(chatContent)\n    })\n  }\n};","author":"k5y1jEYMBqd9uLUx","img":"modules/wfrp4e-gm-toolkit/assets/icons/add-xp.svg","actorIds":[]}
{"_id":"tiKEfs1nB7zAMgYg","name":"Pull Everyone to Scene","permission":{"default":0,"k5y1jEYMBqd9uLUx":3},"type":"script","flags":{},"scope":"global","command":"/* Yanks every player into the scene that the GM is on. \n * Optionally activates the scene, depending on module setting. \n */\n\npullEveryoneToScene();\n\nasync function pullEveryoneToScene() {\n    if (!game.user.isGM) {\n        ui.notifications.error(game.i18n.localize('GMTOOLKIT.Message.ScenePullActivate.NoPermission'), {});\n    }\n\n    switch (game.settings.get(\"wfrp4e-gm-toolkit\", \"scenePullActivate\")) {\n        case \"prompt\": \n            const dialog = new Dialog({\n                title: (game.i18n.localize('GMTOOLKIT.Dialog.ScenePullActivate.Title')),\n                content: `<form>\n                        <div class=\"form-group\">\n                        <label>\n                            ${game.i18n.localize(\"GMTOOLKIT.Dialog.ScenePullActivate.Prompt\")}         \n                            </label>\n                        </div>\n                    </form>`,\n                buttons: {\n                    activate: {\n                        label: \"Activate Scene\",\n                        callback: async () => pullToScene(true)\n                        },\n                    pull: {\n                        label: \"Pull Only\",\n                        callback: async () => pullToScene(false)\n                        },\n                },\n                default: \"pull\"\n            }).render(true);\n            break;\n        case \"always\": \n            pullToScene(true)\n            break;\n        case \"never\":\n            pullToScene(false)\n            break;\n    }\n\n    function pullToScene(activateScene) {\n        let thisScene = game.scenes.viewed\n        if (activateScene) {\n            thisScene.update({\"active\" : true})\n            let sceneActiveState = thisScene.data.active\n            ui.notifications.notify(game.i18n.format('GMTOOLKIT.Message.ScenePullActivate.Activated', {sceneName: thisScene.name}));\n        } else { \n            for ( let u of game.users.players ) {\n                game.socket.emit(\"pullToScene\", thisScene.id, u.id);\n            }\n            let sceneActiveState = String()\n            if (thisScene.data.active == true ) {\n                sceneActiveState = game.i18n.localize('GMTOOLKIT.Scene.Active')\n            } else {\n                sceneActiveState = game.i18n.localize('GMTOOLKIT.Scene.NotActive');\n            }\n            ui.notifications.notify(game.i18n.format('GMTOOLKIT.Message.ScenePullActivate.Pulled', {sceneName: thisScene.name, sceneActiveState}))\n        }\n    }\n};","author":"k5y1jEYMBqd9uLUx","img":"modules/wfrp4e-gm-toolkit/assets/icons/pull-to-scene.svg","actorIds":[]}
